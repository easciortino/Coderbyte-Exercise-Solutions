/*
Have the function LetterCountI(str) take the str parameter being passed and return the first word with the greatest number of 
repeated letters. For example: "Today, is the greatest day ever!" should return greatest because it has 2 e's (and 2 t's) and 
it comes before ever which also has 2 e's. If there are no words with repeating letters return -1. Words will be separated by 
spaces. 
*/

// TWO SOLUTIONS

//using a loop

function LetterCountI(str) { 
  var words = str.split(' ');
  var maxReps = 0;
  console.log(words.length);
  for(var i=0;i<words.length;i++){
    var currentReps = words[i].match(/([a-z])(?=.*\1)/ig);
    if(currentReps !== null){
      if(currentReps.length>maxReps){
        maxReps = currentReps.length;
        var maxWord = words[i]; 
      }
    }
  }
  return maxWord || -1;
}


//using reduce()

function LetterCountI(str) { 
  var words = str.split(' ');
  
  var maxWord = words.reduce(function(a,b){

      var max = a.match(/([a-z])(?=.*\1)/ig);
      var current = b.match(/([a-z])(?=.*\1)/ig);
 
      if (!current){
          return a;
      }else if(max && max.length >= current.length){
          return a;
      }else{
          return b;
      }
  });
  return maxWord.match(/([a-z])(?=.*\1)/ig) ? maxWord : -1;
}
